<Window x:Class="InventarioWPF.Ventanas.Inventario"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InventarioWPF.Ventanas"
        xmlns:main="clr-namespace:InventarioWPF"
        xmlns:pagecs="clr-namespace:InventarioWPF.PageCS"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Inventario" Height="550" Width="1100" MinWidth="1100" 
        MinHeight="450" Loaded="Window_Loaded" ShowInTaskbar="False">
    <Window.Resources>
        <main:BoolToStringConverter x:Key="CYesNo" FalseValue="NO" TrueValue="SI" />
        <pagecs:IntToColorConverter x:Key="IntToColor"/>
        <pagecs:StringToUriConverter x:Key="StringToUri" modeGetPicture="Productos"/>
    </Window.Resources>

    <Grid>
        <Grid x:Name="AllElements">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <TextBox x:Name="txtSearch" Background="White" Margin="10, 10, 20, 0" FontSize="14" VerticalContentAlignment="Center" TextChanged="TxtSearch_TextChanged" />
            <TextBlock Text="Filtrar:" FontSize="14" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5, 10, 5, 0"/>
            <ComboBox Name="cbFiltro" SelectedIndex="0" Grid.Column="2" Margin="10, 10, 10, 0" FontSize="14">
                <ComboBoxItem Content="Todo" VerticalAlignment="Top"/>
                <ComboBoxItem Content="Código"/>
                <ComboBoxItem Content="Descripción"/>
                <ComboBoxItem Content="Categoria"/>
                <ComboBoxItem Content="Proveedor"/>
                <ComboBoxItem Content="Stock"/>
            </ComboBox>

            <DataGrid x:Name="dgUsers" AutoGenerateColumns="False" Grid.Row="1" Grid.ColumnSpan="3" Margin="10" 
                      Background="#FFF1F1F1" RowBackground="#FFFFFFFF" AlternatingRowBackground="#FFF1F1F1"
                      GridLinesVisibility="Horizontal" HorizontalGridLinesBrush="#CCCCCC" ContextMenu="{DynamicResource otherPoint}" 
                      Style="{StaticResource DGHeaderStyle}" HeadersVisibility="Column" IsReadOnly="True" SelectionMode="Single">
                <DataGrid.Resources>
                    <ContextMenu x:Key="otherPoint">
                        <MenuItem Header="Agregar Nuevo" Click="BtnShow_Click"/>
                        <Separator/>
                        <MenuItem Header="Actualizar" Click="BtnUpdate_Click"/>
                        <MenuItem Header="Mostrar Eliminados" Click="BtnSDelete_Click"/>
                    </ContextMenu>

                    <ContextMenu x:Key="rowPoint">
                        <MenuItem Header="Agregar Nuevo" Click="BtnShow_Click"/>
                        <MenuItem Header="Editar Registro" Click="BtnEdit_Click"/>
                        <MenuItem Header="Eliminar\Restaurar" Click="BtnDelete_Click"/>
                        <Separator/>
                        <MenuItem Header="Generar Venta" Click="BtnGenerar_Click"/>
                        <Separator/>
                        <MenuItem Header="Actualizar" Click="BtnUpdate_Click"/>
                    </ContextMenu>
                </DataGrid.Resources>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="ContextMenu" Value="{DynamicResource rowPoint}"/>
                    </Style>
                </DataGrid.RowStyle>
                
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Código" Binding="{Binding Code}" Width="Auto">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DGCellStyle}">
                                <Setter Property="Block.TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Descripción" Binding="{Binding Descrip}" Width="3*"/>
                    <DataGridTextColumn Header="Categoria" Binding="{Binding Categoria}" Width="1.2*">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DGCellStyle}">
                                <Setter Property="Block.TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Precio" Binding="{Binding Price, StringFormat=c}" Width="*">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DGCellStyle}">
                                <Setter Property="Block.TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Stock" Binding="{Binding Stock}" Width="*">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DGCellStyle}">
                                <Setter Property="Block.TextAlignment" Value="Center"/>
                                <Setter Property="Background" Value="{Binding Stock, Converter={StaticResource IntToColor}}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Proveedor" Binding="{Binding Proveedor}" Width="3*"/>
                    <DataGridTextColumn x:Name="hideDelete" Header="Eliminado" Binding="{Binding Oculto, Converter={StaticResource CYesNo}}" Width="*" Visibility="Hidden">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DGCellStyle}">
                                <Setter Property="Block.TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DockPanel Background="#ecf0f1">
                            <Image DockPanel.Dock="Left" Source="{Binding Pict, Converter={StaticResource StringToUri}}" Height="80" Margin="5"/>
                            <Grid Margin="3,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <TextBlock Text="Código:" FontWeight="Bold" />
                                <TextBlock Text="{Binding Code}" Grid.Column="1" />
                                <TextBlock Text="Descripción: " FontWeight="Bold" Grid.Row="1" />
                                <TextBlock Text="{Binding Descrip}" Grid.Column="1" Grid.Row="1" />
                                <TextBlock Text="Categoriar: " FontWeight="Bold" Grid.Row="2" />
                                <TextBlock Text="{Binding Categoria}" Grid.Column="1" Grid.Row="2" />
                                <TextBlock Text="Proveedor: " FontWeight="Bold" Grid.Row="3" />
                                <TextBlock Text="{Binding Proveedor}" Grid.Column="1" Grid.Row="3" />
                                <TextBlock Text="Notas: " FontWeight="Bold" Grid.Row="4" />
                                <TextBlock Text="{Binding Notes}" Grid.Column="1" Grid.Row="4" />
                                <!-- Columna 2 -->
                                <TextBlock Text="Costo: " FontWeight="Bold" Grid.Column="2" />
                                <TextBlock Text="{Binding Cost, StringFormat=c}" Grid.Column="3"/>
                                <TextBlock Text="Precio: " FontWeight="Bold" Grid.Row="1" Grid.Column="2" />
                                <TextBlock Text="{Binding Price, StringFormat=c}" Grid.Row="1" Grid.Column="3" />
                                <TextBlock Text="Stock: " FontWeight="Bold" Grid.Row="2" Grid.Column="2" />
                                <TextBlock Text="{Binding Stock}" Grid.Row="2" Grid.Column="3" />
                                <TextBlock Text="Ingresado: " FontWeight="Bold" Grid.Row="3" Grid.Column="2" />
                                <TextBlock Text="{Binding Entry, StringFormat=d}" Grid.Column="3" Grid.Row="3" />
                                <TextBlock Text="Modificado: " FontWeight="Bold" Grid.Row="4" Grid.Column="2" />
                                <TextBlock Text="{Binding Modify, StringFormat=d}" Grid.Row="4" Grid.Column="3" />
                            </Grid>
                        </DockPanel>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>

            <Border Grid.Row="3" Background="#2ecc71" Grid.ColumnSpan="2">
                <TextBlock x:Name="txtNumbers" Foreground="White" FontSize="20" HorizontalAlignment="Stretch" Margin="10, 0, 0, 0" VerticalAlignment="Center" Text="No se han encontrado registros."/>
            </Border>

            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="3">
                <Button Style="{StaticResource ButtonStyleGreen}" Click="BtnFirstPage_Click">
                    <Image Source="pack://siteoforigin:,,,/Resources/first_48px.png"/>
                </Button>
                <Button Style="{StaticResource ButtonStyleGreen}" Grid.Column="1" Click="BtnPrevious_Click">
                    <Image Source="pack://siteoforigin:,,,/Resources/previous_48px.png" />
                </Button>
                <Button Style="{StaticResource ButtonStyleGreen}" Grid.Column="2" Click="BtnNext_Click">
                    <Image Source="pack://siteoforigin:,,,/Resources/next_48px.png" />
                </Button>
                <Button Style="{StaticResource ButtonStyleGreen}" Grid.Column="3" Click="BtnLast_Click">
                    <Image Source="pack://siteoforigin:,,,/Resources/last_48px.png" />
                </Button>
            </StackPanel>
        </Grid>

        <Border x:Name="backColor" Background="Black" Opacity="0" Visibility="Collapsed"/>

        <Border x:Name="AddUI" CornerRadius="20" Width="550" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Background="White" Padding="5">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform Y="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Inventario}}}"/>
                </TransformGroup>
            </Border.RenderTransform>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1.3*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Código:" FontSize="16" Margin="10, 5, 5, 5"/>
                <TextBox x:Name="txtCod" MaxLength="6" FontSize="14" Margin="5" Padding="2" Grid.Column="1" CharacterCasing="Upper"/>

                <TextBlock Text="Descripción:" FontSize="16" Margin="10, 5, 5, 5" Grid.Row="1"/>
                <TextBox x:Name="txtDes" FontSize="14" Margin="5" Padding="2" Grid.Row="1" Grid.Column="1"/>

                <TextBlock Text="Categoria:" FontSize="16" Margin="10, 5, 5, 5" Grid.Row="2"/>
                <ComboBox x:Name="cbCat" FontSize="14" Margin="5" Padding="2" Grid.Column="1" Grid.Row="2" IsEditable="True" LostFocus="CbCat_LostFocus" KeyDown="CbCat_KeyDown"/>

                <TextBlock Text="Costo:" FontSize="16" Margin="10, 5, 5, 5" Grid.Row="3"/>
                <xctk:DecimalUpDown Name="decCost" FontSize="14" Padding="2" Margin="5" Grid.Row="3" Grid.Column="1" TextAlignment="Center" FormatString="C" Text="0,01" Minimum="0.01"/>
                
                <TextBlock Text="Precio:" FontSize="16" Margin="10, 5, 5, 5" Grid.Row="4"/>
                <xctk:DecimalUpDown Name="decPre" FontSize="14" Padding="2" Margin="5" Grid.Row="4" Grid.Column="1" TextAlignment="Center" FormatString="C" Value="0.01" Minimum="0.01"/>

                <TextBlock Text="Stock:" FontSize="16" Margin="10, 5, 5, 5" Grid.Row="5"/>
                <xctk:IntegerUpDown x:Name="intSt" FontSize="14" Margin="5" Padding="2" Grid.Row="5" Grid.Column="1" Value="1" TextAlignment="Center" Minimum="1"/>

                <TextBlock Text="Proveedor:" FontSize="16" Margin="10, 5, 5, 5" Grid.Row="6"/>
                <ComboBox x:Name="cbPro" FontSize="14" Margin="5" Padding="2" Grid.Column="1" Grid.Row="6" IsEditable="True" KeyDown="CbPro_KeyDown" LostFocus="CbPro_LostFocus"/>

                <TextBlock Text="Nota:" FontSize="16" Margin="10, 5, 5, 5" Grid.Row="7"/>
                <RichTextBox x:Name="txtNote" FontSize="14" Margin="5" Padding="2" Grid.Row="7" Grid.Column="1"  MinHeight="35"/>

                <Button x:Name="btnImage" Height="120" Grid.Column="2" Margin="10" 
                        BorderThickness="0" Background="Gray" Grid.RowSpan="4" Click="BtnImage_Click">
                    <Image x:Name="imgPhoto"/>
                </Button>

                <Button x:Name="btnQuit" Content="Quitar" Foreground="White" FontSize="14" Style="{StaticResource ButtonStyleRed}" Grid.Column="2" Grid.Row="3" Margin="30, 0, 30, 5" Visibility="Hidden" Click="BtnQuit_Click"/>

                <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="7" Margin="10, 5">
                    <Button x:Name="btnSave" Content="Guardar" FontSize="20" Width="130" Foreground="White" Style="{StaticResource ButtonStyleGreen}" Click="BtnSave_Click"/>
                    <Button x:Name="btnClose" Content="X" FontSize="20" Width="42" Foreground="White" Style="{StaticResource ButtonStyleRed}" Click="BtnClose_Click"/>
                </StackPanel>

                <Border x:Name="showError" Grid.Row="8" Grid.ColumnSpan="3" Visibility="Collapsed">
                    <TextBlock x:Name="txtMessage" TextWrapping="Wrap" FontSize="16" Text="Se ha producido un error" Foreground="Red" Margin="5, 2" HorizontalAlignment="Center"/>
                </Border>
            </Grid>

            <Border.Triggers>
                <EventTrigger RoutedEvent="Border.Unloaded">
                    <BeginStoryboard Name="CloseBeginStoryBoard">
                        <Storyboard x:Name="CloseStoryBoard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AddUI" 
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="{Binding MaxHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Inventario}}}"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="Border.Unloaded">
                    <BeginStoryboard Name="ShowBeginStoryBoard">
                        <Storyboard x:Name="ShowStoryBoard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AddUI"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Inventario}}}"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>
        </Border>

        <xctk:BusyIndicator x:Name="bussy" IsBusy="True" BusyContent="Cargando Información..."/>
    </Grid>
</Window>
